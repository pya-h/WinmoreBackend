// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  lastLoginAt DateTime @default(now())
  softDeleted Boolean  @default(false)

  email            String?         @unique @db.VarChar(256)
  name             String?         @db.VarChar(256)
  admin            Boolean         @default(false)
  wallet           Wallet?
  profile          UserProfile?
  dreamMineRecords DreamMineGame[]
}

model UserProfile {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  softDeleted Boolean  @default(false)

  user   User    @relation(fields: [userId], references: [id])
  userId Int     @unique
  avatar String? @db.VarChar(512)
}

model Wallet {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  softDeleted Boolean  @default(false)

  owner   User   @relation(fields: [ownerId], references: [id])
  ownerId Int    @unique
  address String @unique @db.VarChar(256)
}

enum TokensEnum {
  SOLANA
  ETHEREUM
}

enum TransactionStatusEnum {
  SUCCESSFUL
  FAILED
  REVERTED
  PENDING
}

model Transaction {
  id          BigInt   @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  softDeleted Boolean  @default(false)

  sourceId      Int
  destinationId Int
  status        TransactionStatusEnum @default(PENDING)
  remarks       Json?
}

enum GameStatusEnum {
  DREAM_WON
  WITHDRAWN
  LOST
  ONGOING
  NOT_STARTED
}

enum GameModesEnum {
  EASY
  MEDIUM
  HARD
}

model DreamMineGame {
  id          BigInt   @id @default(autoincrement())
  user        User     @relation(fields: [userId], references: [id])
  userId      Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  softDeleted Boolean  @default(false)

  initialBet  Float
  betToken   TokensEnum     @default(SOLANA)
  mode       GameModesEnum  @default(EASY)
  rowsCount  Int            @default(8)
  currentRow Int            @default(0)
  stake      Float          @default(0.0)
  status     GameStatusEnum @default(NOT_STARTED)
  finishedAt DateTime?
}
