// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  lastLoginAt DateTime @default(now())

  email   String?      @unique @db.VarChar(256)
  name    String? @db.VarChar(256)
  admin   Boolean      @default(false)
  wallet  Wallet?
  profile UserProfile?
}

model UserProfile {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int      @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  avatar String? @db.VarChar(512)
}

model Wallet {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  owner   User   @relation(fields: [ownerId], references: [id])
  ownerId Int    @unique
  address String @unique @db.VarChar(256)
}

enum TransactionStatus {
  SUCCESSFUL
  FAILED
  REVERTED
  PENDING
}

model Transaction {
  id            Int      @id @default(autoincrement())
  sourceId      Int
  destinationId Int
  status        TransactionStatus   @default(PENDING)
  remarks       Json?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}
